name: Deploy Application

on:
  push:
    branches: [master]

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure PHP 7.3
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.3
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

      - name: Install Composer depedencies
        run: |
          composer install --no-dev --no-interaction --prefer-dist
      - name: Create deployment artifacts
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf ${GITHUB_SHA}.tar.gz --exclude=*.git --exclude=*node-module *

      - name: Store artifacts for distribution
        uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

  prepare-release-on-server:
    runs-on: ubuntu-latest
    name: Prepare release on server
    needs: create-deployment-artifacts

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: app-build

      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ secrets.STORE_PATH }}/artifacts

      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{github.sha}}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ secrets.STORE_PATH }}/artifacts
          envs: GITHUB_SHA
          script: |
            mkdir -p ${{ secrets.STORE_PATH }}/artifacts/${GITHUB_SHA}
            mkdir -p ${{ secrets.STORE_PATH }}/current
            mkdir -p ${{ secrets.STORE_PATH }}/releases/${GITHUB_SHA}
            tar xzf ${{ secrets.STORE_PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ secrets.STORE_PATH }}/releases/${GITHUB_SHA}"
            rm -rf ${{ secrets.STORE_PATH }}/releases/${GITHUB_SHA}/storage
            [ ! -d "${{ secrets.STORE_PATH }}/storage" ] && mkdir -p ${{ secrets.STORE_PATH }}/storage/{app,public,framework,logs}
            [ ! -d "${{ secrets.STORE_PATH }}/storage/framework" ] && mkdir -p ${{ secrets.STORE_PATH }}/storage/framework/{cache,sessions,testing,views}
            chmod -R 0777 ${{ secrets.STORE_PATH }}/storage

  activate-release:
    name: Sever Development Activate release
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-server ]
    steps:
      - name: Activate release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ secrets.STORE_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ secrets.STORE_PATH }}/current
          STORAGE_PATH: ${{ secrets.STORE_PATH }}/storage
          BASE_PATH: ${{ secrets.STORE_PATH }}
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,ENV_PATH,LARAVEL_ENV
          script: |
            printf "%s" "$APP_ENV" > "${BASE_PATH}/.env"
            ln -s -f ${BASE_PATH}/.env $RELEASE_PATH
            ln -s -f $STORAGE_PATH $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
      - name: Delete Artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: app-build
